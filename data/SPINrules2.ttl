@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .

@prefix ca: <http://floss.syr.edu/ontologies/2008/4/contentAnalysis.owl#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .

@prefix bioj: <http://james.howison.name/ontologies/bio-journal-sample#> .
@prefix citec: <http://james.howison.name/ontologies/software-citation-coding#> .
@prefix bioj-cited: <http://james.howison.name/ontologies/bio-journal-sample-citation#> .

@prefix dc: <http://dublincore.org/documents/2012/06/14/dcmi-terms/> .

@prefix sp:      <http://spinrdf.org/sp#> .
@prefix spin:    <http://spinrdf.org/spin#> .
@prefix spl:     <http://spinrdf.org/spl#> .

bioj:SoftwareMention a rdfs:Class ;
            spin:rule [ rdf:type sp:Construct ;
			sp:text """
	# Create software packages for each non-alternative
	CONSTRUCT {
	  ?software_package a citec:software_package ;
	                    rdfs:label ?name .
	  ?this bioj:mentions_software ?software_package ;
	           
	}
	WHERE {
	  ?this  rdf:type bioj:SoftwareMention ;
	  		 citec:original_name ?name .
	  FILTER NOT EXISTS { ?this bioj:mentions_software ?software }
	  BIND (
		 URI(CONCAT("http://james.howison.name/ontologies/software-citation-coding#software-",
		            ENCODE_FOR_URI(?name)
			       )
		    ) as ?software_package )
	}"""
] ;
            spin:rule [ rdf:type sp:Construct ;
			sp:text """
	# Create ArticleSoftwareLinks
	CONSTRUCT {
	  ?article_software_link rdf:type bioj:ArticleSoftwareLink ;
	  	        bioj:mentions_software ?software_package ;
				citec:from_article ?article ;
				citec:from_mention ?this .
	  ?this citec:article_software_link ?article_software_link .
	}
	WHERE {
	  ?this  rdf:type bioj:SoftwareMention ;
	  		 citec:original_name ?name ;
			 bioj:mentions_software ?software_package ;
			 bioj:from_selection ?selection .
	  ?article bioj:has_selection ?selection .
	   	  BIND (
	   		 URI(CONCAT("http://james.howison.name/ontologies/bio-journal-sample#",
	   		            REPLACE(str(?article), '^.*(#|/)', ""),
						"-",
						ENCODE_FOR_URI(?name)
	   			       )
	   		    ) as ?article_software_link )
	}"""
] ;
.

bioj:ArticleSoftwareLink a rdfs:Class ;
    spin:rule [ rdf:type sp:Construct ;
	sp:text """
	# Move identifiable true code to ArticleSoftwareLink
	# True if any are true, but that is dealt with later.
	CONSTRUCT {
		?this citec:is_identifiable true .
	}
	WHERE {
		?this rdf:type bioj:ArticleSoftwareLink ;
		      citec:from_mention ?mention .
		?mention bioj:from_selection ?sel .
		?sel 	ca:isTargetOf   [ rdf:type ca:CodeApplication ;
								  ca:hasCoder "jbullard" ;
								  ca:appliesCode [ rdf:type citec:identifiable ];
								] ;
	}"""
] ;
    spin:rule [ rdf:type sp:Construct ;
	sp:text """
	# Move findable true code to ArticleSoftwareLink
	# True if any selections were coded findable; false dealt with later.
	CONSTRUCT {
		?this citec:is_findable true .
	}
	WHERE {
		?this rdf:type bioj:ArticleSoftwareLink ;
		      citec:from_mention ?mention .
		?mention bioj:from_selection ?sel .
		?sel 	ca:isTargetOf   [ rdf:type ca:CodeApplication ;
								  ca:hasCoder "jbullard" ;
								  ca:appliesCode [ rdf:type citec:findable ];
								] ;
	}"""
] ;
    spin:rule [ rdf:type sp:Construct ;
	sp:text """
	# Move creator true code to ArticleSoftwareLink
	# True if any selections were coded creator; false dealt with later.
	CONSTRUCT {
		?this citec:is_findable true .
	}
	WHERE {
		?this rdf:type bioj:ArticleSoftwareLink ;
		      citec:from_mention ?mention .
		?mention bioj:from_selection ?sel .
		?sel 	ca:isTargetOf   [ rdf:type ca:CodeApplication ;
								  ca:hasCoder "jbullard" ;
								  ca:appliesCode [ rdf:type citec:findable ];
								] ;
	}"""
] ;


.


