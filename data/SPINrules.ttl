@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .

@prefix ca: <http://floss.syr.edu/ontologies/2008/4/contentAnalysis.owl#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .

@prefix bioj: <http://james.howison.name/ontologies/bio-journal-sample#> .
@prefix citec: <http://james.howison.name/ontologies/software-citation-coding#> .
@prefix bioj-cited: <http://james.howison.name/ontologies/bio-journal-sample-citation#> .

@prefix dc: <http://dublincore.org/documents/2012/06/14/dcmi-terms/> .

@prefix sp:      <http://spinrdf.org/sp#> .
@prefix spin:    <http://spinrdf.org/spin#> .
@prefix spl:     <http://spinrdf.org/spl#> .

bioj:selection a rdfs:Class ;spin:rule [ rdf:type sp:Construct ;
			sp:text """
	# Step 1: Asserts a new type for selections that are software mentions.
	CONSTRUCT {
	  ?this rdf:type bioj:InTextSelection .
	}
	WHERE {
	  ?this  ca:isTargetOf [ ca:appliesCode [ rdf:type citec:in-text_mention ] ] .
	}"""
] ;

#bioj:article a rdfs:Class ;	
#	spin:rule [ rdf:type sp:Construct ;	
#				sp:text """
#	# Asserts a new type for articles with any selections coded as mentions
#	CONSTRUCT {
#	  ?this rdf:type bioj:ArticleWithMention .
#	} 
#	WHERE {
#	  ?this rdf:type bioj:article ;
#	        bioj:has_selection ?sel .
#	  ?sel  ca:isTargetOf [ ca:appliesCode [ rdf:type citec:in-text_mention ] ] .
#	  OPTIONAL { 
#	        ?sel bioj:has_reference ?ref .
#	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:in-text_mention ] ] .
#	  }
#	}
#				"""
#	] ;
#	spin:rule [ rdf:type sp:Construct ;	
#				sp:text """
#	# Asserts a new type for articles with any selections coded as software-used
#	CONSTRUCT {
#	  ?this rdf:type bioj:ArticleWithSoftwareUsed .
#	} 
#	WHERE {
#	  ?this rdf:type bioj:ArticleWithMention ;
#	        bioj:has_selection ?sel .
#	  ?sel  ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_used ] ] .
#	  OPTIONAL { 
#	        ?sel bioj:has_reference ?ref .
#	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_used ] ] .
#	  }
#	}
#				"""
#	] .


# bioj:selection a rdfs:Class ;
# 	spin:rule [ rdf:type sp:Construct ;
# 			#	spin:thisUnbound "true"^^xsd:boolean ;
# 				sp:text """
# 	# Distinguish between direct and citation selections
# 	CONSTRUCT {
#   		?this rdf:type bioj:DirectSelection .
# 	}
# 	WHERE {
# 		?this rdf:type bioj:selection .
# 		?sel rdf:type bioj:selection .
# 		FILTER NOT EXISTS {
# 	         ?sel bioj:has_reference ?this .
# 	    }
# 	}"""
# 	] ;

	# spin:rule [ rdf:type sp:Construct ;
	# 			spin:thisUnbound "true"^^xsd:boolean ;
	# 			sp:text """
	#  # Moves all codes directly onto selection, even if they originated
	#  # on a reference.
	# CONSTRUCT {
	#   ?this ca:isTargetOf [ ca:appliesCode ?coding ] .
	# }
	# WHERE {
	#       ?article rdf:type bioj:article .
	#       ?article bioj:selection ?this .
	#       ?this bioj:has_reference ?ref .
	#   ?ref ca:isTargetOf [ ca:appliesCode ?coding ] .
	# }"""
	# ] ;
	

#	spin:rule [ rdf:type sp:Construct ;	
#				sp:text """
#	# Asserts a new type for selections that are identifiable software mentions.
#	CONSTRUCT {
#	  ?this rdf:type bioj:IdentifiableSoftwareMention .
#	} 
#	WHERE {
#      ?this rdf:type bioj:SoftwareMention .
#	  ?this  ca:isTargetOf [ ca:appliesCode [ rdf:type citec:identifiable ] ] .
#	  OPTIONAL { 
#	        ?this bioj:has_reference ?ref .
#	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:identifiable ] ] .
#	  }
#	}"""
#	] ; 
#	spin:rule [ rdf:type sp:Construct ;	
#				sp:text """
#	# Asserts a new type for selections that are findable software mentions.
#	CONSTRUCT {
#	  ?this rdf:type bioj:FindableSoftwareMention .
#	} 
#	WHERE {
#      ?this rdf:type bioj:SoftwareMention .
#	  ?this  ca:isTargetOf [ ca:appliesCode [ rdf:type citec:findable ] ] .
#	  OPTIONAL { 
#	        ?this bioj:has_reference ?ref .
#	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:findable ] ] .
#	  }
#	}"""
#	] ;

.
	
#bioj:SoftwareMention a rdfs:Class ;
#	spin:rule [ rdf:type sp:Construct ;	
#				sp:text """
#	# Step 2: Moves all codes directly onto SoftwareMention, even if they originated
#	# on a reference.
#	CONSTRUCT {
#	  ?this ca:isTargetOf [ ca:appliesCode ?coding ] .
#	} 
#	WHERE { 
#	  ?this bioj:has_reference ?ref .
#	  ?ref ca:isTargetOf [ ca:appliesCode ?coding ] .
#	}"""
#	] ;
#.


