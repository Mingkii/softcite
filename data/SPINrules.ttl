@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .

@prefix ca: <http://floss.syr.edu/ontologies/2008/4/contentAnalysis.owl#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .

@prefix bioj: <http://james.howison.name/ontologies/bio-journal-sample#> .
@prefix citec: <http://james.howison.name/ontologies/software-citation-coding#> .
@prefix bioj-cited: <http://james.howison.name/ontologies/bio-journal-sample-citation#> .

@prefix dc: <http://dublincore.org/documents/2012/06/14/dcmi-terms/> .

@prefix sp:      <http://spinrdf.org/sp#> .
@prefix spin:    <http://spinrdf.org/spin#> .
@prefix spl:     <http://spinrdf.org/spl#> .

bioj:selection a rdfs:Class ;
            spin:rule [ rdf:type sp:Construct ;
			sp:text """
	# Asserts a new type for selections that are software mentions.
	CONSTRUCT {
	  ?this rdf:type bioj:InTextSelection .
	}
	WHERE {
	  ?this  ca:isTargetOf [ ca:appliesCode [ rdf:type citec:in-text_mention ] ] .
	}"""
] ;
.

# bioj:ReferenceSelection a rdfs:Class ;
#             spin:rule [ rdf:type sp:Construct ;
# 			sp:text """
# 	CONSTRUCT {
# 	  ?this rdf:type bioj:DectectedReference .
# 	}
# 	WHERE {
# 	  ?this  rdf:type bioj:ReferenceSelection .
# 	}"""
# ] ;
# .

bioj:InTextSelection a rdfs:Class ;
            spin:rule [ rdf:type sp:Construct ;
			sp:text """
	# Creates a new node for SoftwareMentions
	CONSTRUCT {
	  ?newNode rdf:type bioj:SoftwareMention ;
	           bioj:from_selection ?this .
	}
	WHERE {
	  ?this  rdf:type bioj:InTextSelection .
	  BIND( URI ( CONCAT ("http://james.howison.name/ontologies/software-citation-coding#",
	              strafter(str(?this), "#"),
				  "-mention" )
				 ) 
				  as ?newNode 
		   )
	}"""
] ;
.

bioj:SoftwareMention a rdfs:Class ;
            spin:rule [ rdf:type sp:Construct ;
			sp:text """
	# Moves software_name codes.
	CONSTRUCT {
	  ?this citec:has_software_name true ;
	        citec:original_name ?software_name .
	}
	WHERE {
	  ?this  rdf:type bioj:SoftwareMention ;
	  		bioj:from_selection ?sel .
			{ 
				?sel ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_name ;
			                                      rdfs:label ?software_name ] ] . 
			} UNION {
				?sel bioj:has_reference ?ref . 
		        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_name ;
			                                           rdfs:label ?software_name ] ] .
			}
	}"""
] ;
            spin:rule [ rdf:type sp:Construct ;
			sp:text """
	# Deal with few without a name.
	CONSTRUCT {
	  ?this citec:has_software_name false .
	}
	WHERE {
	  ?this  rdf:type bioj:SoftwareMention ;
	  		bioj:from_selection ?sel .
			FILTER NOT EXISTS { ?sel ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_name ] ] . }
			FILTER NOT EXISTS {
				?sel bioj:has_reference ?ref . 
		        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_name  ] ] .
			}
	}"""
] ;
            spin:rule [ rdf:type sp:Construct ;
			sp:text """
	# Moves version_number and/or date. Either code can be on original or any reference.
	CONSTRUCT {
	  ?this citec:has_version_indicator true ;
	}
	WHERE {
  ?this  rdf:type bioj:SoftwareMention ;
  		bioj:from_selection ?sel .
		{ 
			?sel ca:isTargetOf [ ca:appliesCode [ rdf:type ?code ] ] . 
		} UNION {
			?sel bioj:has_reference ?ref . 
	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type ?code ] ] .
		}
		FILTER (?code = citec:version_number || ?code = citec:date)
	}"""
] ;

            spin:rule [ rdf:type sp:Construct ;
			sp:text """
	# Deal with Software Used
	CONSTRUCT {
	  ?this citec:has_software_used true ;
	}
	WHERE {
  	  ?this  rdf:type bioj:SoftwareMention ;
  		     bioj:from_selection ?sel .
	 		{ 
	 			?sel ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_used ] ] . 
	 		} UNION {
	 			?sel bioj:has_reference ?ref . 
	 	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_used ] ] .
	 		}
		
	}"""
];	
        spin:rule [ rdf:type sp:Construct ;
		sp:text """
# And software not used.
CONSTRUCT {
  ?this citec:has_software_used false ;
}
WHERE {
  ?this  rdf:type bioj:SoftwareMention ;
	     bioj:from_selection ?sel .
 		{ 
 			?sel ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_not_used ] ] . 
 		} UNION {
 			?sel bioj:has_reference ?ref . 
 	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_not_used ] ] .
 		}
	
}"""
] ;
        spin:rule [ rdf:type sp:Construct ;
		sp:text """
# Deal with URL.
CONSTRUCT {
  ?this citec:has_url true ;
}
WHERE {
  ?this  rdf:type bioj:SoftwareMention ;
	     bioj:from_selection ?sel .
 		{ 
 			?sel ca:isTargetOf [ ca:appliesCode [ rdf:type citec:url ] ] . 
 		} UNION {
 			?sel bioj:has_reference ?ref . 
 	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:url ] ] .
 		}
	
}"""
] ;
        spin:rule [ rdf:type sp:Construct ;
		sp:text """
# Deal with no url
CONSTRUCT {
  ?this citec:has_url false ;
}
WHERE {
  ?this  rdf:type bioj:SoftwareMention ;
	     bioj:from_selection ?sel .
		FILTER NOT EXISTS { ?sel ca:isTargetOf [ ca:appliesCode [ rdf:type citec:url ] ] . }
		FILTER NOT EXISTS {
			?sel bioj:has_reference ?ref . 
	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:url  ] ] .
		}
	
}"""
] ;
        spin:rule [ rdf:type sp:Construct ;
		sp:text """
# Deal with configuration_details.
CONSTRUCT {
  ?this citec:has_configuration_details false ;
}
WHERE {
  ?this  rdf:type bioj:SoftwareMention ;
	     bioj:from_selection ?sel .
 		{ 
 			?sel ca:isTargetOf [ ca:appliesCode [ rdf:type citec:configuration_details ] ] . 
 		} UNION {
 			?sel bioj:has_reference ?ref . 
 	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:configuration_details ] ] .
 		}
	
}"""
] ;
        spin:rule [ rdf:type sp:Construct ;
		sp:text """
# Deal with no url
CONSTRUCT {
  ?this citec:has_configuration_details false ;
}
WHERE {
  ?this  rdf:type bioj:SoftwareMention ;
	     bioj:from_selection ?sel .
		FILTER NOT EXISTS { ?sel ca:isTargetOf [ ca:appliesCode [ rdf:type citec:configuration_details ] ] . }
		FILTER NOT EXISTS {
			?sel bioj:has_reference ?ref . 
	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:configuration_details  ] ] .
		}
	
}"""
] ;

            spin:rule [ rdf:type sp:Construct ;
			sp:text """
	# Does this specific Mention do any crediting? Can be on in-text or in reference.
	CONSTRUCT {
	  ?this citec:has_creator true .
	}
	WHERE {
  	  ?this  rdf:type bioj:SoftwareMention ;
  		     bioj:from_selection ?sel .
	 		{ 
	 			?sel ca:isTargetOf [ ca:appliesCode [ rdf:type citec:creator ] ] . 
	 		} UNION {
	 			?sel bioj:has_reference ?ref . 
	 	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:creator ] ] .
	 		}
		
	}"""
];	
        spin:rule [ rdf:type sp:Construct ;
		sp:text """
# Create a boolean for whether the Mention has a citation.
CONSTRUCT {
  ?this citec:has_citation false ;
}
WHERE {
  ?this  rdf:type bioj:SoftwareMention ;
	     bioj:from_selection ?sel .
		 FILTER NOT EXISTS { ?sel bioj:has_reference ?ref } .
}"""
] ;

        spin:rule [ rdf:type sp:Construct ;
		sp:text """
# Citations to domain publications
CONSTRUCT {
  ?this citec:has_citation true ;
        citec:citation_type "publication" .
}
WHERE {
  ?this  rdf:type bioj:SoftwareMention ;
	     bioj:from_selection [ bioj:has_reference ?ref ] .
  ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:domain_publication  ] ] .
}"""
] ;

        spin:rule [ rdf:type sp:Construct ;
		sp:text """
# Citations to software publications
CONSTRUCT {
  ?this citec:has_citation true ;
        citec:citation_type "publication" .
}
WHERE {
  ?this  rdf:type bioj:SoftwareMention ;
	     bioj:from_selection [ bioj:has_reference ?ref ] .
  ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_publication  ] ] .
}"""
] ;

        spin:rule [ rdf:type sp:Construct ;
		sp:text """
# Citations to domain publications
CONSTRUCT {
  ?this citec:has_citation true ;
        citec:citation_type "user_manual" .
}
WHERE {
  ?this  rdf:type bioj:SoftwareMention ;
	     bioj:from_selection [ bioj:has_reference ?ref ] .
  ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:users_manual  ] ] .
}"""
] ;
        spin:rule [ rdf:type sp:Construct ;
		sp:text """
# Citations to domain publications
CONSTRUCT {
  ?this citec:has_citation true ;
        citec:citation_type "name_or_website" .
}
WHERE {
  ?this  rdf:type bioj:SoftwareMention ;
	     bioj:from_selection [ bioj:has_reference ?ref ] .
  ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:project_name  ] ] .
}"""
] ;
        spin:rule [ rdf:type sp:Construct ;
		sp:text """
# Citations to domain publications
CONSTRUCT {
  ?this citec:has_citation true ;
        citec:citation_type "name_or_website" .
}
WHERE {
  ?this  rdf:type bioj:SoftwareMention ;
	     bioj:from_selection [ bioj:has_reference ?ref ] .
  ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:project_page  ] ] .
}"""
] ;

.



#bioj:article a rdfs:Class ;	
#	spin:rule [ rdf:type sp:Construct ;	
#				sp:text """
#	# Asserts a new type for articles with any selections coded as mentions
#	CONSTRUCT {
#	  ?this rdf:type bioj:ArticleWithMention .
#	} 
#	WHERE {
#	  ?this rdf:type bioj:article ;
#	        bioj:has_selection ?sel .
#	  ?sel  ca:isTargetOf [ ca:appliesCode [ rdf:type citec:in-text_mention ] ] .
#	  OPTIONAL { 
#	        ?sel bioj:has_reference ?ref .
#	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:in-text_mention ] ] .
#	  }
#	}
#				"""
#	] ;
#	spin:rule [ rdf:type sp:Construct ;	
#				sp:text """
#	# Asserts a new type for articles with any selections coded as software-used
#	CONSTRUCT {
#	  ?this rdf:type bioj:ArticleWithSoftwareUsed .
#	} 
#	WHERE {
#	  ?this rdf:type bioj:ArticleWithMention ;
#	        bioj:has_selection ?sel .
#	  ?sel  ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_used ] ] .
#	  OPTIONAL { 
#	        ?sel bioj:has_reference ?ref .
#	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:software_used ] ] .
#	  }
#	}
#				"""
#	] .


# bioj:selection a rdfs:Class ;
# 	spin:rule [ rdf:type sp:Construct ;
# 			#	spin:thisUnbound "true"^^xsd:boolean ;
# 				sp:text """
# 	# Distinguish between direct and citation selections
# 	CONSTRUCT {
#   		?this rdf:type bioj:DirectSelection .
# 	}
# 	WHERE {
# 		?this rdf:type bioj:selection .
# 		?sel rdf:type bioj:selection .
# 		FILTER NOT EXISTS {
# 	         ?sel bioj:has_reference ?this .
# 	    }
# 	}"""
# 	] ;

	# spin:rule [ rdf:type sp:Construct ;
	# 			spin:thisUnbound "true"^^xsd:boolean ;
	# 			sp:text """
	#  # Moves all codes directly onto selection, even if they originated
	#  # on a reference.
	# CONSTRUCT {
	#   ?this ca:isTargetOf [ ca:appliesCode ?coding ] .
	# }
	# WHERE {
	#       ?article rdf:type bioj:article .
	#       ?article bioj:selection ?this .
	#       ?this bioj:has_reference ?ref .
	#   ?ref ca:isTargetOf [ ca:appliesCode ?coding ] .
	# }"""
	# ] ;
	

#	spin:rule [ rdf:type sp:Construct ;	
#				sp:text """
#	# Asserts a new type for selections that are identifiable software mentions.
#	CONSTRUCT {
#	  ?this rdf:type bioj:IdentifiableSoftwareMention .
#	} 
#	WHERE {
#      ?this rdf:type bioj:SoftwareMention .
#	  ?this  ca:isTargetOf [ ca:appliesCode [ rdf:type citec:identifiable ] ] .
#	  OPTIONAL { 
#	        ?this bioj:has_reference ?ref .
#	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:identifiable ] ] .
#	  }
#	}"""
#	] ; 
#	spin:rule [ rdf:type sp:Construct ;	
#				sp:text """
#	# Asserts a new type for selections that are findable software mentions.
#	CONSTRUCT {
#	  ?this rdf:type bioj:FindableSoftwareMention .
#	} 
#	WHERE {
#      ?this rdf:type bioj:SoftwareMention .
#	  ?this  ca:isTargetOf [ ca:appliesCode [ rdf:type citec:findable ] ] .
#	  OPTIONAL { 
#	        ?this bioj:has_reference ?ref .
#	        ?ref ca:isTargetOf [ ca:appliesCode [ rdf:type citec:findable ] ] .
#	  }
#	}"""
#	] ;

#.
	
#bioj:SoftwareMention a rdfs:Class ;
#	spin:rule [ rdf:type sp:Construct ;	
#				sp:text """
#	# Step 2: Moves all codes directly onto SoftwareMention, even if they originated
#	# on a reference.
#	CONSTRUCT {
#	  ?this ca:isTargetOf [ ca:appliesCode ?coding ] .
#	} 
#	WHERE { 
#	  ?this bioj:has_reference ?ref .
#	  ?ref ca:isTargetOf [ ca:appliesCode ?coding ] .
#	}"""
#	] ;
#.


